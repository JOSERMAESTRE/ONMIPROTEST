<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-25T10:18:28 COT" name="SuiteEcommerce" finished-at="2025-01-25T10:18:49 COT" duration-ms="21453">
    <groups>
    </groups>
    <test started-at="2025-01-25T10:18:28 COT" name="Register Page Test" finished-at="2025-01-25T10:18:37 COT" duration-ms="9158">
      <class name="testingforomi.RegisterUser.RegisterPageTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testingforomi.RegisterUser.RegisterPageTest@2ad48653]" started-at="2025-01-25T10:18:28 COT" name="beforeClass" finished-at="2025-01-25T10:18:32 COT" duration-ms="4476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TestRegister()[pri:0, instance:testingforomi.RegisterUser.RegisterPageTest@2ad48653]" started-at="2025-01-25T10:18:32 COT" name="TestRegister" finished-at="2025-01-25T10:18:34 COT" duration-ms="1367" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[El mensaje de error se mostró.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: El mensaje de error se mostró.
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertFalse(Assert.java:65)
at testingforomi.RegisterUser.RegisterPageTest.TestRegister(RegisterPageTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestRegister -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testingforomi.RegisterUser.RegisterPageTest@2ad48653]" started-at="2025-01-25T10:18:34 COT" name="afterClass" finished-at="2025-01-25T10:18:37 COT" duration-ms="3186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testingforomi.RegisterUser.RegisterPageTest -->
    </test> <!-- Register Page Test -->
    <test started-at="2025-01-25T10:18:28 COT" name="Rsponsive Menu Page Test" finished-at="2025-01-25T10:18:38 COT" duration-ms="10384">
      <class name="testingforomi.ResponsiveMenu.ResponsiveMenuPageTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testingforomi.ResponsiveMenu.ResponsiveMenuPageTest@31edaa7d]" started-at="2025-01-25T10:18:28 COT" name="beforeClass" finished-at="2025-01-25T10:18:33 COT" duration-ms="5312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="MenuBurgerTesting()[pri:0, instance:testingforomi.ResponsiveMenu.ResponsiveMenuPageTest@31edaa7d]" started-at="2025-01-25T10:18:33 COT" name="MenuBurgerTesting" finished-at="2025-01-25T10:18:35 COT" duration-ms="1817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MenuBurgerTesting -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testingforomi.ResponsiveMenu.ResponsiveMenuPageTest@31edaa7d]" started-at="2025-01-25T10:18:35 COT" name="afterClass" finished-at="2025-01-25T10:18:38 COT" duration-ms="3207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testingforomi.ResponsiveMenu.ResponsiveMenuPageTest -->
    </test> <!-- Rsponsive Menu Page Test -->
    <test started-at="2025-01-25T10:18:28 COT" name="Responsive Bouild Computer Page Test" finished-at="2025-01-25T10:18:39 COT" duration-ms="10932">
      <class name="testingforomi.ResponsiveBuildComputer.BuildComputerTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testingforomi.ResponsiveBuildComputer.BuildComputerTest@6950ed69]" started-at="2025-01-25T10:18:28 COT" name="beforeClass" finished-at="2025-01-25T10:18:33 COT" duration-ms="4974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="MenuBurgerTesting()[pri:0, instance:testingforomi.ResponsiveBuildComputer.BuildComputerTest@6950ed69]" started-at="2025-01-25T10:18:33 COT" name="MenuBurgerTesting" finished-at="2025-01-25T10:18:36 COT" duration-ms="2708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MenuBurgerTesting -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testingforomi.ResponsiveBuildComputer.BuildComputerTest@6950ed69]" started-at="2025-01-25T10:18:36 COT" name="afterClass" finished-at="2025-01-25T10:18:39 COT" duration-ms="3199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testingforomi.ResponsiveBuildComputer.BuildComputerTest -->
    </test> <!-- Responsive Bouild Computer Page Test -->
    <test started-at="2025-01-25T10:18:28 COT" name="Responsive Advanced Search Page Test" finished-at="2025-01-25T10:18:39 COT" duration-ms="11554">
      <class name="testingforomi.ResponsiveAdvancedSearch.AdvancedSearchTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testingforomi.ResponsiveAdvancedSearch.AdvancedSearchTest@7bf3a5d8]" started-at="2025-01-25T10:18:28 COT" name="beforeClass" finished-at="2025-01-25T10:18:33 COT" duration-ms="5445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="AdvancedSearchTesting()[pri:0, instance:testingforomi.ResponsiveAdvancedSearch.AdvancedSearchTest@7bf3a5d8]" started-at="2025-01-25T10:18:33 COT" name="AdvancedSearchTesting" finished-at="2025-01-25T10:18:36 COT" duration-ms="2873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdvancedSearchTesting -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testingforomi.ResponsiveAdvancedSearch.AdvancedSearchTest@7bf3a5d8]" started-at="2025-01-25T10:18:36 COT" name="afterClass" finished-at="2025-01-25T10:18:39 COT" duration-ms="3184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testingforomi.ResponsiveAdvancedSearch.AdvancedSearchTest -->
    </test> <!-- Responsive Advanced Search Page Test -->
    <test started-at="2025-01-25T10:18:28 COT" name="Login Page Test" finished-at="2025-01-25T10:18:40 COT" duration-ms="12134">
      <class name="testingforomi.Login.LoginPageTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testingforomi.Login.LoginPageTest@7905a0b8]" started-at="2025-01-25T10:18:28 COT" name="beforeClass" finished-at="2025-01-25T10:18:33 COT" duration-ms="4755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TestLogin()[pri:0, instance:testingforomi.Login.LoginPageTest@7905a0b8]" started-at="2025-01-25T10:18:33 COT" name="TestLogin" finished-at="2025-01-25T10:18:37 COT" duration-ms="4110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestLogin -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testingforomi.Login.LoginPageTest@7905a0b8]" started-at="2025-01-25T10:18:37 COT" name="afterClass" finished-at="2025-01-25T10:18:40 COT" duration-ms="3216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testingforomi.Login.LoginPageTest -->
    </test> <!-- Login Page Test -->
    <test started-at="2025-01-25T10:18:28 COT" name="Shopping Page Test" finished-at="2025-01-25T10:18:49 COT" duration-ms="21453">
      <class name="testingforomi.Shopping.ShoppingTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testingforomi.Shopping.ShoppingTest@14f232c4]" started-at="2025-01-25T10:18:28 COT" name="beforeClass" finished-at="2025-01-25T10:18:33 COT" duration-ms="5216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="ShopTest()[pri:0, instance:testingforomi.Shopping.ShoppingTest@14f232c4]" started-at="2025-01-25T10:18:33 COT" name="ShopTest" finished-at="2025-01-25T10:18:46 COT" duration-ms="12922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShopTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testingforomi.Shopping.ShoppingTest@14f232c4]" started-at="2025-01-25T10:18:46 COT" name="afterClass" finished-at="2025-01-25T10:18:49 COT" duration-ms="3255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testingforomi.Shopping.ShoppingTest -->
    </test> <!-- Shopping Page Test -->
  </suite> <!-- SuiteEcommerce -->
</testng-results>
